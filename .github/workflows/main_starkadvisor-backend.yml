name: Deploy Django backend to Azure Web App (App Service Linux)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

# Evita solapes: si haces un nuevo push, cancela el anterior
concurrency:
  group: webapp-starkadvisor-backend
  cancel-in-progress: true

env:
  PYTHON_VERSION: '3.11'   # Igual que en App Service (Configuración de la pila)

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # (Opcional) Prepara Python si luego agregas lint/tests
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip (opcional)
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Sube el código fuente sin venvs ni metadatos pesados
      - name: Upload artifact (backend source)
        uses: actions/upload-artifact@v4
        with:
          name: backend-src
          path: |
            .
            !.git/
            !.github/
            !**/__pycache__/
            !**/*.ipynb
            !**/.pytest_cache/
            !**/.mypy_cache/
            !**/.ruff_cache/
            !**/.venv/
            !**/venv/
            !**/antenv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-src

      - name: Azure Login (federated)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_2A74A6406B2C4AE5BDE8385E609832AC }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_0A35B1E80008457D8D59EF4E62EA9F08 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_958550156BE34115B59D23AC21EE820B }}

      # Asegura settings críticos antes del deploy
      - name: Ensure App Settings (Oryx on)
        run: |
          az webapp config appsettings set \
            --name starkadvisor-backend \
            --resource-group rg-starkadvisor \
            --settings \
              SCM_DO_BUILD_DURING_DEPLOYMENT=true
          # Si quieres forzar también el módulo de settings:
          # az webapp config appsettings set \
          #   --name starkadvisor-backend \
          #   --resource-group rg-starkadvisor \
          #   --settings DJANGO_SETTINGS_MODULE=starkadvisorbackend.settings.production

      # Empaqueta un ZIP limpio (OneDeploy funciona mejor con zip)
      - name: Create clean deployment ZIP
        run: |
          rm -rf package app.zip
          mkdir -p package
          rsync -av \
            --exclude '.git' \
            --exclude '.github' \
            --exclude '__pycache__' \
            --exclude '*.ipynb' \
            --exclude '.pytest_cache' \
            --exclude '.mypy_cache' \
            --exclude '.ruff_cache' \
            --exclude 'venv' \
            --exclude '.venv' \
            --exclude 'antenv' \
            ./ package/
          cd package
          zip -r ../app.zip .

      - name: Deploy to Azure Web App (OneDeploy + zip)
        id: deploy
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'starkadvisor-backend'
          slot-name: 'Production'
          package: app.zip

      - name: Restart app (soft)
        run: az webapp restart --name starkadvisor-backend --resource-group rg-starkadvisor
